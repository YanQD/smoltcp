
[tap0] Checking for frames from switch
[tap0] No frames from switch
[tap0] No frames from tap device

[tap1] Checking for frames from switch
[tap1] No frames from switch
[tap1] No frames from tap device

[tap0] Checking for frames from switch
[tap0] No frames from switch
[tap0] No frames from tap device
[36mEGRESS: Attempting to send packet: Ipv4(PacketV4 { header: Repr { src_addr: Address([192, 168, 69, 22]), dst_addr: Address([192, 168, 69, 11]), next_header: Udp, payload_len: 26, hop_limit: 64 }, payload: Udp(Repr { src_port: 7969, dst_port: 6969 }, [72, 101, 108, 108, 111, 32, 102, 114, 111, 109, 32, 115, 101, 110, 100, 101, 114, 33]) })[0m
[33mEGRESS: Neighbor address: Some(Ipv4(Address([192, 168, 69, 11])))[0m
[33mIP representation: Ipv4(Repr { src_addr: Address([192, 168, 69, 22]), dst_addr: Address([192, 168, 69, 11]), next_header: Udp, payload_len: 26, hop_limit: 64 })[0m
FrameCaptureTxToken consume: [255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 0, 2, 8, 6, 0, 1, 8, 0, 6, 4, 0, 1, 2, 0, 0, 0, 0, 2, 192, 168, 69, 22, 255, 255, 255, 255, 255, 255, 192, 168, 69, 11]

[tap0] Sending frame to switch from port 0
RingBuffer try_push: head=0, tail=0, next_tail=1, capacity=128
Pushing frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer push success: new tail=1
[32mTxToken consume: [255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 0, 2, 8, 6, 0, 1, 8, 0, 6, 4, 0, 1, 2, 0, 0, 0, 0, 2, 192, 168, 69, 22, 255, 255, 255, 255, 255, 255, 192, 168, 69, 11][0m
Popped frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer pop success: new head=1
Switch processing frame from port 0

Switch processing frame of size 42 from port 0

Switch: received frame on port 0
Source MAC: 02-00-00-00-00-02
Destination MAC: ff-ff-ff-ff-ff-ff
Switch: broadcasting frame
Switch: sending to port 1
RingBuffer try_push: head=0, tail=0, next_tail=1, capacity=4096
Pushing frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer push success: new tail=1

=== MAC Address Table ===
MAC: 02-00-00-00-00-02, Port: 0
========================


[tap0] Checking for frames from switch
[tap0] No frames from switch
[tap0] No frames from tap device
[36mEGRESS: Attempting to send packet: Ipv4(PacketV4 { header: Repr { src_addr: Address([192, 168, 69, 22]), dst_addr: Address([192, 168, 69, 11]), next_header: Udp, payload_len: 26, hop_limit: 64 }, payload: Udp(Repr { src_port: 7969, dst_port: 6969 }, [72, 101, 108, 108, 111, 32, 102, 114, 111, 109, 32, 115, 101, 110, 100, 101, 114, 33]) })[0m
[33mEGRESS: Neighbor address: Some(Ipv4(Address([192, 168, 69, 11])))[0m
[33mIP representation: Ipv4(Repr { src_addr: Address([192, 168, 69, 22]), dst_addr: Address([192, 168, 69, 11]), next_header: Udp, payload_len: 26, hop_limit: 64 })[0m
FrameCaptureTxToken consume: [255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 0, 2, 8, 6, 0, 1, 8, 0, 6, 4, 0, 1, 2, 0, 0, 0, 0, 2, 192, 168, 69, 22, 255, 255, 255, 255, 255, 255, 192, 168, 69, 11]

[tap0] Sending frame to switch from port 0
RingBuffer try_push: head=1, tail=1, next_tail=2, capacity=128
Pushing frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer push success: new tail=2
[32mTxToken consume: [255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 0, 2, 8, 6, 0, 1, 8, 0, 6, 4, 0, 1, 2, 0, 0, 0, 0, 2, 192, 168, 69, 22, 255, 255, 255, 255, 255, 255, 192, 168, 69, 11][0m
Failed to send datas: buffer full
Popped frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer pop success: new head=2
Switch processing frame from port 0

Switch processing frame of size 42 from port 0

Switch: received frame on port 0
Source MAC: 02-00-00-00-00-02
Destination MAC: ff-ff-ff-ff-ff-ff
Switch: broadcasting frame
Switch: sending to port 1
RingBuffer try_push: head=0, tail=1, next_tail=2, capacity=4096
Pushing frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer push success: new tail=2

=== MAC Address Table ===
MAC: 02-00-00-00-00-02, Port: 0
========================


[tap0] Checking for frames from switch
[tap0] No frames from switch
[tap0] No frames from tap device
[36mEGRESS: Attempting to send packet: Ipv4(PacketV4 { header: Repr { src_addr: Address([192, 168, 69, 22]), dst_addr: Address([192, 168, 69, 11]), next_header: Udp, payload_len: 26, hop_limit: 64 }, payload: Udp(Repr { src_port: 7969, dst_port: 6969 }, [72, 101, 108, 108, 111, 32, 102, 114, 111, 109, 32, 115, 101, 110, 100, 101, 114, 33]) })[0m
[33mEGRESS: Neighbor address: Some(Ipv4(Address([192, 168, 69, 11])))[0m
[33mIP representation: Ipv4(Repr { src_addr: Address([192, 168, 69, 22]), dst_addr: Address([192, 168, 69, 11]), next_header: Udp, payload_len: 26, hop_limit: 64 })[0m
FrameCaptureTxToken consume: [255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 0, 2, 8, 6, 0, 1, 8, 0, 6, 4, 0, 1, 2, 0, 0, 0, 0, 2, 192, 168, 69, 22, 255, 255, 255, 255, 255, 255, 192, 168, 69, 11]

[tap0] Sending frame to switch from port 0
RingBuffer try_push: head=2, tail=2, next_tail=3, capacity=128
Pushing frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer push success: new tail=3
[32mTxToken consume: [255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 0, 2, 8, 6, 0, 1, 8, 0, 6, 4, 0, 1, 2, 0, 0, 0, 0, 2, 192, 168, 69, 22, 255, 255, 255, 255, 255, 255, 192, 168, 69, 11][0m
Failed to send datas: buffer full
Popped frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer pop success: new head=3
Switch processing frame from port 0

Switch processing frame of size 42 from port 0

Switch: received frame on port 0
Source MAC: 02-00-00-00-00-02
Destination MAC: ff-ff-ff-ff-ff-ff
Switch: broadcasting frame
Switch: sending to port 1
RingBuffer try_push: head=0, tail=2, next_tail=3, capacity=4096
Pushing frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer push success: new tail=3

=== MAC Address Table ===
MAC: 02-00-00-00-00-02, Port: 0
========================


[tap0] Checking for frames from switch
[tap0] No frames from switch
[tap0] No frames from tap device
[36mEGRESS: Attempting to send packet: Ipv4(PacketV4 { header: Repr { src_addr: Address([192, 168, 69, 22]), dst_addr: Address([192, 168, 69, 11]), next_header: Udp, payload_len: 26, hop_limit: 64 }, payload: Udp(Repr { src_port: 7969, dst_port: 6969 }, [72, 101, 108, 108, 111, 32, 102, 114, 111, 109, 32, 115, 101, 110, 100, 101, 114, 33]) })[0m
[33mEGRESS: Neighbor address: Some(Ipv4(Address([192, 168, 69, 11])))[0m
[33mIP representation: Ipv4(Repr { src_addr: Address([192, 168, 69, 22]), dst_addr: Address([192, 168, 69, 11]), next_header: Udp, payload_len: 26, hop_limit: 64 })[0m
FrameCaptureTxToken consume: [255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 0, 2, 8, 6, 0, 1, 8, 0, 6, 4, 0, 1, 2, 0, 0, 0, 0, 2, 192, 168, 69, 22, 255, 255, 255, 255, 255, 255, 192, 168, 69, 11]

[tap0] Sending frame to switch from port 0
RingBuffer try_push: head=3, tail=3, next_tail=4, capacity=128
Pushing frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer push success: new tail=4
[32mTxToken consume: [255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 0, 2, 8, 6, 0, 1, 8, 0, 6, 4, 0, 1, 2, 0, 0, 0, 0, 2, 192, 168, 69, 22, 255, 255, 255, 255, 255, 255, 192, 168, 69, 11][0m
Failed to send datas: buffer full
Popped frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer pop success: new head=4
Switch processing frame from port 0

Switch processing frame of size 42 from port 0

Switch: received frame on port 0
Source MAC: 02-00-00-00-00-02
Destination MAC: ff-ff-ff-ff-ff-ff
Switch: broadcasting frame
Switch: sending to port 1
RingBuffer try_push: head=0, tail=3, next_tail=4, capacity=4096
Pushing frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer push success: new tail=4

=== MAC Address Table ===
MAC: 02-00-00-00-00-02, Port: 0
========================


[tap0] Checking for frames from switch
[tap0] No frames from switch
[tap0] No frames from tap device
[36mEGRESS: Attempting to send packet: Ipv4(PacketV4 { header: Repr { src_addr: Address([192, 168, 69, 22]), dst_addr: Address([192, 168, 69, 11]), next_header: Udp, payload_len: 26, hop_limit: 64 }, payload: Udp(Repr { src_port: 7969, dst_port: 6969 }, [72, 101, 108, 108, 111, 32, 102, 114, 111, 109, 32, 115, 101, 110, 100, 101, 114, 33]) })[0m
[33mEGRESS: Neighbor address: Some(Ipv4(Address([192, 168, 69, 11])))[0m
[33mIP representation: Ipv4(Repr { src_addr: Address([192, 168, 69, 22]), dst_addr: Address([192, 168, 69, 11]), next_header: Udp, payload_len: 26, hop_limit: 64 })[0m
FrameCaptureTxToken consume: [255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 0, 2, 8, 6, 0, 1, 8, 0, 6, 4, 0, 1, 2, 0, 0, 0, 0, 2, 192, 168, 69, 22, 255, 255, 255, 255, 255, 255, 192, 168, 69, 11]

[tap0] Sending frame to switch from port 0
RingBuffer try_push: head=4, tail=4, next_tail=5, capacity=128
Pushing frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer push success: new tail=5
[32mTxToken consume: [255, 255, 255, 255, 255, 255, 2, 0, 0, 0, 0, 2, 8, 6, 0, 1, 8, 0, 6, 4, 0, 1, 2, 0, 0, 0, 0, 2, 192, 168, 69, 22, 255, 255, 255, 255, 255, 255, 192, 168, 69, 11][0m
Failed to send datas: buffer full
Popped frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer pop success: new head=5
Switch processing frame from port 0

Switch processing frame of size 42 from port 0

Switch: received frame on port 0
Source MAC: 02-00-00-00-00-02
Destination MAC: ff-ff-ff-ff-ff-ff
Switch: broadcasting frame
Switch: sending to port 1
RingBuffer try_push: head=0, tail=4, next_tail=5, capacity=4096
Pushing frame data:
Frame length: 42 bytes
Raw data:
ff ff ff ff ff ff 02 00 00 00 00 02 08 06 00 01 
08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 45 16 
ff ff ff ff ff ff c0 a8 45 0b 
Ethernet Header:
  Dst MAC: ff-ff-ff-ff-ff-ff
  Src MAC: 02-00-00-00-00-02
  Type: Arp
  Payload length: 28 bytes
  Payload preview (first 32 bytes):
00 01 08 00 06 04 00 01 02 00 00 00 00 02 c0 a8 
45 16 ff ff ff ff ff ff c0 a8 45 0b 
----------------------------------------
RingBuffer push success: new tail=5

=== MAC Address Table ===
MAC: 02-00-00-00-00-02, Port: 0
========================

